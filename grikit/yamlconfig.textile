Many of the rake tasks in Albacore support the ability to configure attributes via an external YAML file. This is useful in scenarios where different environments need to have different configuration settings, while still maintaining the core rake file in version control. 

For example, if developers are working on their own local copy of a database, they may want to configure the SQLCmd task with their own local database connection information. However, they will not want their local connection information stored in the master rakefile because that would break the build automation server and/or other developers that pull down the file from source control. To facilitate this situation, call the .configure method on an Albacore task that supports it, and load your configuration from an external yaml file.

h3. YAMLConfig Tasks

The following Albacore tasks support YAML configuration:

* [[sqlcmdtask|SQLCmdTask]]
* [[assemblyinfotask|AssemblyInfoTask]]

h2. How to configure SQLCmd via YAML

The SQLCmdTask supports configuration via YAML files. To do this, call the .configure method and provide the location of the yml file.

<pre><code>desc "Create the initial R1 database"
Rake::SQLCmdTask.new(:create_initial_db) do |sql|

  sql.configure("sqlcmd.yml")

  sql.variables = {:New_DB_Name => "Albacore_Test"}
  sql.command_directory = "SQLScripts\\Database\\Db_R1_scripts\\CreateDB"
  sql.scripts << "RunCreateDatabase.sql"
end
</code></pre>

The contents of the yml file should be name: value pairs that represent the sqlcmd settings and values for those settings. For example, in the above example, the server, database, username and password can all be specified through this yml file:

sqlcmd.yml
<pre><code>path_to_command: sqlcmd.exe
server: some_server_name
database: some_database
username: some_user
password: shh!!! it's a secret!
</code></pre>